---
import FullStar from "@/components/ui/stars/FullStar.astro";
import AvatarTestimonialSection from "../../ui/avatars/AvatarTestimonialSection.astro";
import HalfStar from "@/components/ui/stars/HalfStar.astro";
import PrimaryCTA from "@/components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "@/components/ui/buttons/SecondaryCTA.astro";

// Define props from Astro
const { title, testimonials } = Astro.props;

// Define TypeScript interface for Testimonial
interface Testimonial {
  avatarSrc: string;
  avatarAlt: string;
  title: string;
  rating: number;
  category: number;
  investment: number;
  reward: number;
  rewardType: string;
  url: string;
  disclaimer: string;
  code: string;
  id: number;
  howToRegister: string;
  
  
  
}

// Define TypeScript interface for props
interface Props {
  title: string;
  testimonials: Testimonial[];
}

---
<!-- Main div that wraps the testimonials section -->
<section
  class="max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full rounded-lg shadow-2xl "
  id="testimonials"
>
  <!-- Title of the testimonials section -->
  <div class="mb-6 w-3/4 max-w-2xl sm:mb-10 md:mb-16 lg:w-1/2">
    <h2
      class="text-balance text-2xl font-bold text-neutral-800 dark:text-neutral-200 sm:text-3xl lg:text-4xl"
    >
      {title}
    </h2>
  </div>

  <div class="grid gap-12 lg:grid-cols-2 xl:grid-cols-3">
    <!-- Looping through each testimonial data and rendering it -->
    {
      testimonials.map(({avatarSrc, avatarAlt, title, rating, category, investment, reward, rewardType, id, url, code, disclaimer, howToRegister}: Testimonial) => {

        const actualRating = rating % 1 >= 0.7 ? Math.ceil(rating) : Math.floor(rating);
        const isHalfStar = rating % 1 > 0.2 && rating % 1 < 0.7;


        return (
        <div class="w-80 sm:w-96 col-span-1 mx-auto rounded-xl dark:ring-neutral-700 text-neutral-800 dark:text-neutral-200 shadow-own">
          <div class="flex flex-col rounded-xl bg-neutral-50 dark:bg-neutral-700">
            
            <div class=" bg-neutral-200 p-4 dark:bg-neutral-900/30 md:px-7 rounded-t-xl ">
              <div class="flex items-center">
                <AvatarTestimonialSection
                  src={avatarSrc}
                  alt={avatarAlt}
                  />

                <div class="ms-3 grow">
                  <p class="font-bold  text-xl">
                    {title}
                  </p>

                  <p class="text-sm font-semibold text-neutral-500 dark:text-neutral-200 ">
                    {category? 'Casino' : 'Sport Betting'}
                  </p>
                
                  <div class="flex flex-col items-start mt-2">
                    <div class="flex space-x-1 ">
                      <div class="flex space-x-1">

                        {
                          actualRating > 0 && 
                          Array(actualRating)
                            .fill(0)
                            .map((_, i) => <FullStar key={i} />)
                        }
                        {
                          isHalfStar && <HalfStar />
                        }
                       
                      </div>
                     
                    </div>
                   
                  </div>
                </div>
              </div>
            </div>

            <div class="text-center px-4 py-4 font-bold text-xl bg-gray-50 dark:bg-neutral-800">

              <div class="text-pretty dark:text-neutral-800 text-neutral-100 bg-neutral-800 dark:bg-neutral-100 w-fit mx-auto px-8 rounded-lg font-extrabold">
                <p class="py-1">
                  Bet {investment}$ And Get
                </p>
                <span class="text-pretty rounded-lg text-neutral-800 dark:text-neutral-100 text-5xl block bg-neutral-50 dark:bg-neutral-800 py-3 px-12">
                   {reward}$
                </span>
                <p class="py-1">
                  In {rewardType}
                </p>
                <div class="flex flex-col gap-2 md:flex-row md:gap-6 py-4 justify-between ">
                  <SecondaryCTA title="How To Register" url={url} />
                  <PrimaryCTA title="Check Out" url={url} />
                </div>

              </div>

            </div>
              {code ? 
                <p class="text-center h-8 bg-gray-50 dark:bg-neutral-800 pb-1">Or Use Code: <b class="">{code}</b></p>
                :
                <fragment class="h-8 bg-gray-50 dark:bg-neutral-800" />
              }

            <div class="rounded-b-xl bg-neutral-200 dark:bg-neutral-900/30">

              <div class="group flex relative gap-1 m-2 cursor-pointer">
                  <svg class="w-4 h-4 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11h2v5m-2 0h4m-2.592-8.5h.01M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                  </svg>

                  <p class="text-xs">Advertiser Disclosure</p>
                  <span class="group-hover:opacity-100 transition-opacity text-sm rounded-md top-5 absolute opacity-0 py-2 px-4 -mx-2 my-2 bg-neutral-100 dark:bg-neutral-700">{disclaimer}</span>
              </div>
              
                  
            </div>
          </div>
        </div>
      )
    })
    }
  </div>
  </section>
